{
  "openapi": "3.0.1",
  "info": {
    "title": "API for LangDB",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://api.us-east-1.langdb.ai"
    }
  ],
  "paths": {
    "/oauth2/token": {
      "post": {
        "summary": "Get OAuth2 Access Token",
        "operationId": "getOAuth2AccessToken",
        "requestBody": {
          "description": "Credentials for obtaining an access token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAccessTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Access token retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessTokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/integrations": {
      "get": {
        "summary": "List all enabled integrations",
        "operationId": "listEnabledIntegrations",
        "responses": {
          "200": {
            "description": "A list of enabled integrations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataIntegration"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid query parameters or inputs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "No integrations found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [],
            "ProjectIdAuth": []
          }
        ]
      }
    },
    "/integrations/available": {
      "get": {
        "summary": "List all available integrations",
        "operationId": "listAvailableIntegrations",
        "responses": {
          "200": {
            "description": "A list of available integrations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Integration"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid query parameters or inputs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [],
            "ProjectIdAuth": []
          }
        ]
      }
    },
    "/integrations/{integration_name}": {
      "delete": {
        "summary": "Delete an integration",
        "operationId": "deleteIntegration",
        "parameters": [
          {
            "name": "integration_name",
            "in": "path",
            "required": true,
            "description": "Name of the integration to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Integration deleted successfully"
          },
          "404": {
            "description": "Integration not found"
          }
        },
        "security": [
          {
            "BearerAuth": [],
            "ProjectIdAuth": []
          }
        ]
      }
    },
    "/integrations/{integration_name}/auth/start": {
      "get": {
        "summary": "Start authentication for an integration",
        "operationId": "startIntegrationAuth",
        "parameters": [
          {
            "name": "integration_name",
            "in": "path",
            "required": true,
            "description": "Name of the integration to authenticate",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "redirect_uri",
            "in": "query",
            "required": false,
            "description": "URL to redirect after authentication",
            "schema": {
              "type": "string",
              "format": "uri"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "description": "State parameter to prevent CSRF",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Authentication started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/AuthStartResult_Saved"
                    },
                    {
                      "$ref": "#/components/schemas/AuthStartResult_ExternalLoginLink"
                    },
                    {
                      "$ref": "#/components/schemas/AuthStartResult_OtpSent"
                    },
                    {
                      "$ref": "#/components/schemas/AuthStartResult_RequireEmailAndPassword"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid query parameters or inputs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Integration not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [],
            "ProjectIdAuth": []
          }
        ]
      }
    },
    "/integrations/{integration_name}/auth/verify_callback": {
      "post": {
        "summary": "Verify authentication callback",
        "operationId": "verifyIntegrationAuthCallback",
        "parameters": [
          {
            "name": "integration_name",
            "in": "path",
            "required": true,
            "description": "Name of the integration",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Authentication callback data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CallbackRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication verified successfully",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/AuthResult_TokenInfo"
                    },
                    {
                      "$ref": "#/components/schemas/AuthResult_CookieWithToken"
                    },
                    {
                      "$ref": "#/components/schemas/AuthResult_Cookies"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid callback data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Integration not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [],
            "ProjectIdAuth": []
          }
        ]
      }
    },
    "/integrations/{integration_name}/actions": {
      "get": {
        "summary": "List all actions for a specific integration",
        "operationId": "getActions",
        "parameters": [
          {
            "name": "integration_name",
            "in": "path",
            "required": true,
            "description": "Name of the integration",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of actions for the specified integration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IntegrationAction"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid integration name or parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Integration not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [],
            "ProjectIdAuth": []
          }
        ]
      }
    },
    "/integrations/{integration_name}/resources": {
      "get": {
        "summary": "List all resources for a specific integration",
        "operationId": "getIntegrationResources",
        "parameters": [
          {
            "name": "integration_name",
            "in": "path",
            "required": true,
            "description": "Name of the integration",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of resources for the specified integration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VirtualTableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid integration name or parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Integration not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [],
            "ProjectIdAuth": []
          }
        ]
      }
    },
    "/{integration_name}/execute": {
      "post": {
        "summary": "Execute an integration action",
        "operationId": "executeIntegrationAction",
        "parameters": [
          {
            "name": "integration_name",
            "in": "path",
            "required": true,
            "description": "Name of the integration",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Execution parameters for the action",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Action executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecuteResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid parameters or missing integration configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Integration or action not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [],
            "ProjectIdAuth": []
          }
        ]
      }
    },
    "/integrations/{integration_name}/{resource_name}/fetch": {
      "post": {
        "summary": "Fetch data for a specific resource within an integration",
        "operationId": "fetchResource",
        "parameters": [
          {
            "name": "integration_name",
            "in": "path",
            "required": true,
            "description": "Name of the integration",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resource_name",
            "in": "path",
            "required": true,
            "description": "Name of the resource within the integration",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Parameters required to fetch the resource",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FetchResourceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Data fetched successfully for the specified resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchResourceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Invalid parameters or request body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Integration or resource not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [],
            "ProjectIdAuth": []
          }
        ]
      }
    },
    "/{integration_name}/fetch_mapped_data": {
      "post": {
        "summary": "Fetch mapped data from integration",
        "operationId": "fetchMappedData",
        "parameters": [
          {
            "name": "integration_name",
            "in": "path",
            "required": true,
            "description": "Name of the integration",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Data mapping parameters for fetching mapped data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FetchMappedDataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mapped data retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchMappedDataResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters or integration configuration not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Integration or virtual table not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "BearerAuth": [],
            "ProjectIdAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "ProjectIdAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Project-Id"
      }
    },
    "schemas": {
      "AuthStartResult_Saved": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "Saved"
            ],
            "description": "Indicates that saved credentials are being used."
          }
        }
      },
      "AuthStartResult_ExternalLoginLink": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ExternalLoginLink"
            ],
            "description": "Indicates that an external OAuth login link is provided."
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "URL to redirect the user for OAuth authentication."
          }
        },
        "required": [
          "status",
          "url"
        ]
      },
      "AuthStartResult_OtpSent": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OtpSent"
            ],
            "description": "Indicates that an OTP has been sent for authentication."
          }
        }
      },
      "AuthStartResult_RequireEmailAndPassword": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "RequireEmailAndPassword"
            ],
            "description": "Indicates that email and password are required for authentication."
          }
        }
      },
      "CallbackRequest": {
        "type": "object",
        "properties": {
          "params": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Callback parameters received from the integration"
          }
        },
        "required": [
          "params"
        ]
      },
      "AuthResult_TokenInfo": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TokenInfo"
            ]
          },
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string",
            "nullable": true
          },
          "expires_in": {
            "type": "integer",
            "nullable": true
          },
          "token_type": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "type",
          "access_token"
        ]
      },
      "AuthResult_CookieWithToken": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "CookieWithToken"
            ]
          },
          "cookies": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "token_info": {
            "$ref": "#/components/schemas/TokenInfo"
          }
        },
        "required": [
          "type",
          "cookies",
          "token_info"
        ]
      },
      "AuthResult_Cookies": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "Cookies"
            ]
          },
          "cookies": {
            "type": "string",
            "description": "Serialized cookies string"
          }
        },
        "required": [
          "type",
          "cookies"
        ]
      },
      "TokenInfo": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string",
            "nullable": true
          },
          "expires_in": {
            "type": "integer",
            "nullable": true
          },
          "token_type": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "access_token"
        ]
      },
      "Parameter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Parameter name"
          },
          "type": {
            "type": "string",
            "description": "Data type of the parameter"
          },
          "required": {
            "type": "boolean",
            "description": "Whether the parameter is required"
          },
          "description": {
            "type": "string",
            "description": "Description of the parameter"
          }
        },
        "required": [
          "name",
          "type",
          "required"
        ]
      },
      "VirtualTableResponse": {
        "type": "object",
        "properties": {
          "resources": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Resource"
            },
            "description": "Mapping of resource names to their definitions."
          },
          "columns": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/TableField"
            },
            "description": "Mapping of resource names to their column schemas."
          },
          "configs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ConfigSchema"
            },
            "description": "Mapping of resource names to their configuration schemas."
          }
        },
        "required": [
          "resources",
          "columns",
          "configs"
        ]
      },
      "Resource": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique identifier for the resource."
          },
          "type": {
            "type": "string",
            "description": "Type of the resource (e.g., table, view)."
          },
          "description": {
            "type": "string",
            "description": "Human-readable description of the resource."
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the resource was created."
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the resource was last updated."
          }
        },
        "required": [
          "name",
          "type",
          "description",
          "created_at",
          "updated_at"
        ]
      },
      "TableField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the field/column"
          },
          "type": {
            "type": "string",
            "description": "Data type of the field"
          },
          "description": {
            "type": "string",
            "description": "Description of the field"
          },
          "nullable": {
            "type": "boolean",
            "description": "Indicates if the field can be null"
          }
        },
        "required": [
          "name",
          "type"
        ]
      },
      "ConfigSchema": {
        "type": "object",
        "description": "Configuration details for the resource.",
        "additionalProperties": true
      },
      "ExecuteRequest": {
        "type": "object",
        "properties": {
          "api_name": {
            "type": "string",
            "description": "Name of the API action to execute"
          },
          "params": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Parameters required for the action"
          },
          "columns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Optional list of columns to retrieve"
          }
        },
        "required": [
          "api_name",
          "params"
        ]
      },
      "ExecuteResponse": {
        "type": "object",
        "description": "Result of the executed action",
        "properties": {
          "data": {
            "type": "object",
            "description": "The result data returned by the action"
          },
          "message": {
            "type": "string",
            "description": "Optional message or status information"
          }
        },
        "additionalProperties": true
      },
      "GetAccessTokenRequest": {
        "type": "object",
        "properties": {
          "client_id": {
            "type": "string",
            "description": "Client ID provided during app registration"
          },
          "client_secret": {
            "type": "string",
            "description": "Client secret provided during app registration"
          },
          "grant_type": {
            "type": "string",
            "description": "The grant type requesting the token. Only 'client_credentials' is supported.",
            "enum": [
              "client_credentials"
            ],
            "default": "client_credentials"
          }
        },
        "required": [
          "client_id",
          "client_secret",
          "grant_type"
        ]
      },
      "AccessTokenResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Access token issued by the authorization server"
          },
          "expires_in": {
            "type": "integer",
            "description": "Lifetime in seconds of the access token"
          },
          "token_type": {
            "type": "string",
            "description": "Type of the token issued",
            "example": "Bearer"
          },
          "refresh_token": {
            "type": "string",
            "description": "Refresh token which can be used to obtain new access tokens using the same authorization grant"
          },
          "id_token": {
            "type": "string",
            "description": "ID Token containing user identity claims"
          }
        },
        "required": [
          "access_token",
          "expires_in",
          "token_type"
        ]
      },
      "FetchResourceRequest": {
        "type": "object",
        "description": "Parameters required to fetch the resource",
        "additionalProperties": {
          "type": "string"
        }
      },
      "FetchResourceResponse": {
        "type": "object",
        "description": "Result of the resource execution",
        "additionalProperties": true
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message describing what went wrong."
          },
          "code": {
            "type": "string",
            "description": "Error code representing the type of error."
          }
        },
        "required": [
          "error",
          "code"
        ]
      },
      "FetchMappedDataRequest": {
        "type": "object",
        "properties": {
          "virtual_table_name": {
            "type": "string",
            "description": "Name of the virtual table to fetch data from"
          },
          "params": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Parameters required to fetch the mapped data"
          }
        },
        "required": [
          "virtual_table_name",
          "params"
        ]
      },
      "DataIntegration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the integration."
          },
          "integration_name": {
            "type": "string",
            "description": "Name of the integration."
          },
          "state": {
            "type": "string",
            "description": "Current state of the integration (e.g., enabled, disabled).",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the integration was created."
          },
          "config": {
            "type": "object",
            "description": "Configuration details for the integration.",
            "additionalProperties": true
          }
        },
        "required": [
          "id",
          "integration_name",
          "config",
          "state",
          "created_at"
        ]
      },
      "Integration": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the integration."
          },
          "auth_type": {
            "type": "string",
            "description": "Type of authentication required by the integration.",
            "enum": [
              "oauth",
              "native"
            ]
          },
          "required_inputs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of required input fields for the integration."
          }
        },
        "required": [
          "name",
          "auth_type",
          "required_inputs"
        ]
      },
      "IntegrationAction": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique identifier for the action."
          },
          "description": {
            "type": "string",
            "description": "Human-readable description of the action."
          },
          "input_schema": {
            "type": "string",
            "description": "JSON Schema for validating inputs.",
            "nullable": true
          },
          "output_schema": {
            "type": "string",
            "description": "JSON Schema for validating outputs.",
            "nullable": true
          }
        },
        "required": [
          "name",
          "description"
        ]
      },
      "FetchMappedDataResponse": {
        "type": "object",
        "description": "Data retrieved from the virtual table",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": true
            },
            "description": "Array of data records"
          },
          "message": {
            "type": "string",
            "description": "Optional message or status information"
          }
        },
        "additionalProperties": true
      }
    }
  }
}